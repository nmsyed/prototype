{"ast":null,"code":"import _toConsumableArray from\"/var/www/html/proto/prototype/React-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/var/www/html/proto/prototype/React-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable react/style-prop-object */ /* eslint-disable jsx-a11y/alt-text */ /* eslint-disable jsx-a11y/anchor-is-valid */ /* eslint-disable */import React,{useState,useEffect}from\"react\";import{withTranslation}from\"react-i18next\";// import { Chart } from \"react-google-charts\";\nimport\"bootstrap/dist/css/bootstrap.min.css\";import\"./Stats.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var colors={Extras:\"blue\",Speed:\"red\",Program:\"yellow\",Temp:\"pink\"};export function Stats(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),max=_useState4[0],setMax=_useState4[1];var t=props.t;var _useState5=useState({backgroundColor:\"#aaaaaa\",title:\"Program wise Stats\",titleTextStyle:{color:\"red\"},is3D:true,chartArea:{left:\"3%\",top:\"3%\",height:\"65%\",width:\"65%\"},fontSize:16,bold:true,legend:{position:\"right\",textStyle:{color:\"white\",fontSize:16,bold:true}}}),_useState6=_slicedToArray(_useState5,2),options=_useState6[0],setOptions=_useState6[1];useEffect(function(){// Update the document title using the browser API\nvar total=0;console.log(props.stats);var data=_toConsumableArray(props.stats);var Max=0;for(var i=0;i<data.length;i++){total+=parseInt(data[i][1]);data[i][2]=data[i][1];if(Max<parseInt(data[i][1]))Max=parseInt(data[i][1]);}setMax(Max);console.log(max);for(var _i=0;_i<data.length;_i++){console.log(data[_i][1]);data[_i][1]=Math.round(data[_i][1]/total*100);}setData(data);setOptions({titleTextStyle:{color:\"#FFFFFF\",italic:true,fontSize:24},backgroundColor:\"#aaaaaa\",lable:props.temparature?\"Temp\":props.speed?\"Speed\":props.extras?\"Extras\":\"Program\",title:props.temparature?\"Temparature\":props.speed?\"Speed\":props.extras?\"Extras\":\"Programme\"});},[props.stats]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{className:\"statsTitle\",children:t(options.title)})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-columns text-white\",children:data.map(function(card,index){return/*#__PURE__*/_jsx(\"div\",{className:\"card mt-1 mb-1 \".concat(max===card[2]?colors[options.lable]:\"brown\"),children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"card-title\",children:t(card[0])}),/*#__PURE__*/_jsxs(\"p\",{className:\"percnetage\",children:[card[1],\"%\"]})]})});})})]});}export default withTranslation([\"translation\"])(Stats);","map":{"version":3,"sources":["/var/www/html/proto/prototype/React-UI/src/Components/App/Stats/Stats.js"],"names":["React","useState","useEffect","withTranslation","colors","Extras","Speed","Program","Temp","Stats","props","data","setData","max","setMax","t","backgroundColor","title","titleTextStyle","color","is3D","chartArea","left","top","height","width","fontSize","bold","legend","position","textStyle","options","setOptions","total","console","log","stats","Max","i","length","parseInt","Math","round","italic","lable","temparature","speed","extras","map","card","index"],"mappings":"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","sourcesContent":["/* eslint-disable react/style-prop-object */\n/* eslint-disable jsx-a11y/alt-text */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport { withTranslation } from \"react-i18next\";\n// import { Chart } from \"react-google-charts\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Stats.css\";\n\nconst colors = {\n  Extras: \"blue\",\n  Speed: \"red\",\n  Program: \"yellow\",\n  Temp: \"pink\",\n};\nexport function Stats(props) {\n  const [data, setData] = useState([]);\n  const [max, setMax] = useState(0);\n  const { t } = props;\n  const [options, setOptions] = useState({\n    backgroundColor: \"#aaaaaa\",\n    title: \"Program wise Stats\",\n    titleTextStyle: { color: \"red\" },\n    is3D: true,\n    chartArea: {\n      left: \"3%\",\n      top: \"3%\",\n      height: \"65%\",\n      width: \"65%\",\n    },\n    fontSize: 16,\n    bold: true,\n    legend: {\n      position: \"right\",\n      textStyle: { color: \"white\", fontSize: 16, bold: true },\n    },\n  });\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    let total = 0;\n    console.log(props.stats);\n    let data = [...props.stats];\n    let Max = 0;\n    for (let i = 0; i < data.length; i++) {\n      total += parseInt(data[i][1]);\n      data[i][2] = data[i][1];\n      if (Max < parseInt(data[i][1])) Max = parseInt(data[i][1]);\n    }\n\n    setMax(Max);\n\n    console.log(max);\n\n    for (let i = 0; i < data.length; i++) {\n      console.log(data[i][1]);\n      data[i][1] = Math.round((data[i][1] / total) * 100);\n    }\n\n    setData(data);\n\n    setOptions({\n      titleTextStyle: { color: \"#FFFFFF\", italic: true, fontSize: 24 },\n      backgroundColor: \"#aaaaaa\",\n\n      lable: props.temparature\n        ? \"Temp\"\n        : props.speed\n        ? \"Speed\"\n        : props.extras\n        ? \"Extras\"\n        : \"Program\",\n      title: props.temparature\n        ? \"Temparature\"\n        : props.speed\n        ? \"Speed\"\n        : props.extras\n        ? \"Extras\"\n        : \"Programme\",\n    });\n  }, [props.stats]);\n\n  return (\n    <>\n      <div>\n        <h2 className=\"statsTitle\">{t(options.title)}</h2>\n      </div>\n      <div className=\"card-columns text-white\">\n        {data.map((card, index) => {\n          return (\n            <div\n              className={`card mt-1 mb-1 ${\n                max === card[2] ? colors[options.lable] : \"brown\"\n              }`}\n            >\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{t(card[0])}</h5>\n                <p className=\"percnetage\">{card[1]}%</p>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n\nexport default withTranslation([\"translation\"])(Stats);\n"]},"metadata":{},"sourceType":"module"}