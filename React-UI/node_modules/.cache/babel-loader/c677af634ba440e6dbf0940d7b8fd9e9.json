{"ast":null,"code":"var _jsxFileName = \"/var/www/html/proto/prototype/React-UI/src/Components/App/Transaction/Transaction.js\";\n\n/* eslint-disable react/style-prop-object */\n\n/* eslint-disable jsx-a11y/alt-text */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\n/* eslint-disable */\nimport React, { Component } from \"react\";\nimport Bubble from \"../Stats/Bubble\";\nimport Bar from \"../Stats/Bar\";\nimport Select from \"react-select\";\nimport { HomeService } from \"../../_Services\";\nimport \"./Transaction.css\";\nimport MenuItems from \"../Menu/Menu\";\nimport i18n from \"../../../i18n\";\nimport { withTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Transaction extends Component {\n  constructor(props) {\n    super(props);\n\n    this.userStats = () => {\n      HomeService.userStats().then(res => {\n        // console.log(res.data.data);\n        var stats = [];\n        res.data.data.forEach(function (value) {\n          //  stats.push([value.programName, value.programStats]);\n          stats.push(value);\n        });\n        this.setState({\n          fullstats: stats\n        }, function () {\n          console.log(this.state.fullstats);\n          this.filterTree(this.state.selectedOption.value);\n        });\n      }).catch(err => {});\n    };\n\n    this.filterTree = id => {\n      // var id = 1;\n      var treeData = this.state.fullstats.filter(stat => {\n        return parseInt(id) === parseInt(stat.question);\n      });\n      var data = [];\n      var dataStats = [];\n      console.log(treeData);\n      const prgms = {};\n      const speed = {};\n      const temp = {};\n      const extra = {};\n      var prgmTotal = 0;\n      var speedTotal = 0;\n      var tempTotal = 0;\n      var extraTotal = 0;\n\n      for (let i of treeData) {\n        for (const key in i) {\n          if (key != \"pid\" && key != \"question\" && key != \"totalStats\" && i[key] != \"NONE\") {\n            console.log(i[key]);\n\n            if (key == \"programName\") {\n              prgms[i[key]] = prgms[i[key]] == undefined ? i[\"totalStats\"] : prgms[i[key]] += i[\"totalStats\"];\n              prgmTotal += parseInt(i[\"totalStats\"]);\n            }\n\n            if (key == \"speed\") {\n              speed[i[key]] = speed[i[key]] == undefined ? i[\"totalStats\"] : speed[i[key]] += i[\"totalStats\"];\n              speedTotal += parseInt(i[\"totalStats\"]);\n            }\n\n            if (key == \"temp\") {\n              temp[i[key]] = temp[i[key]] == undefined ? i[\"totalStats\"] : temp[i[key]] += i[\"totalStats\"];\n              tempTotal += parseInt(i[\"totalStats\"]);\n            }\n\n            if (key == \"extraWash\") {\n              extra[i[key]] = extra[i[key]] == undefined ? i[\"totalStats\"] : extra[i[key]] += i[\"totalStats\"];\n              extraTotal += parseInt(i[\"totalStats\"]);\n            }\n          }\n        }\n      }\n\n      var pgmsArr = [];\n\n      for (let [key, value] of Object.entries(prgms)) {\n        value = Math.round(value / prgmTotal * 100);\n        pgmsArr.push({\n          x: key,\n          y: value\n        });\n      }\n\n      var speedArr = [];\n\n      for (let [key, value] of Object.entries(speed)) {\n        value = Math.round(value / speedTotal * 100);\n        speedArr.push({\n          x: key,\n          y: value\n        });\n      }\n\n      var tempArr = [];\n\n      for (let [key, value] of Object.entries(temp)) {\n        value = Math.round(value / tempTotal * 100);\n        tempArr.push({\n          x: key,\n          y: value\n        });\n      }\n\n      var extraArr = [];\n\n      for (let [key, value] of Object.entries(extra)) {\n        value = Math.round(value / extraTotal * 100);\n        extraArr.push({\n          x: key,\n          y: value\n        });\n      } // console.log(prgms, speed, temp, extra);\n\n\n      const series = [];\n\n      if (pgmsArr.length > 0) {\n        series.push({\n          name: \"Programme\",\n          data: pgmsArr\n        });\n      }\n\n      if (speedArr.length > 0) {\n        series.push({\n          name: \"Speed\",\n          data: speedArr\n        });\n      }\n\n      if (speedArr.length > 0) {\n        series.push({\n          name: \"Speed\",\n          data: speedArr\n        });\n      }\n\n      if (tempArr.length > 0) {\n        series.push({\n          name: \"Temperature\",\n          data: tempArr\n        });\n      }\n\n      if (tempArr.length > 0) {\n        series.push({\n          name: \"Extra Wash\",\n          data: tempArr\n        });\n      }\n\n      this.setState({\n        series: series\n      }); // for (let i of treeData) {\n      //   // console.log(i);\n      //   for (const key in i) {\n      //     if (\n      //       key != \"pid\" &&\n      //       key != \"question\" &&\n      //       key != \"totalStats\" &&\n      //       i[key] != \"NONE\"\n      //     ) {\n      //       var txt = key + \" - \" + i[key];\n      //       if (data[txt] == undefined) data[txt] = 0;\n      //       data[txt] = parseInt(data[txt]) + parseInt(i[\"totalStats\"]);\n      //     }\n      //   }\n      //   // console.log(data);\n      //   // for (let [index, value] of i) {\n      //   //   console.log(index, value);\n      //   // }\n      // }\n      // for (const key in data) {\n      //   // var txt = key + \":\" + data[key];\n      //   dataStats.push({\n      //     x: key,\n      //     y: data[key],\n      //   });\n      //   //console.log(`${key}: ${i[key]}`);\n      // }\n      // console.log(dataStats);\n      // this.setState({ data: dataStats });\n      // console.log(data);\n      //  console.log(treeData);\n    };\n\n    this.handleChange = selectedOption => {\n      console.log(selectedOption);\n      this.setState({\n        selectedOption: selectedOption\n      }, function () {\n        this.filterTree(selectedOption.value);\n      }); // this.setState({ selectedOption }, () =>\n      //  // console.log(`Option selected:`, this.state.selectedOption)\n      // );\n    };\n\n    const {\n      t\n    } = this.props;\n    this.state = {\n      series: [],\n      fullstats: {},\n      selectedOption: {\n        value: 1,\n        label: \"You have 3 pairs of coloured clothes with heavy stains. What options would you prefer to wash the clothes?\",\n        selected: false,\n        program: []\n      },\n      q: [{\n        value: 1,\n        label: \"You have 3 pairs of coloured clothes with heavy stains. What options would you prefer to wash the clothes?\",\n        selected: false,\n        program: []\n      }, {\n        value: 2,\n        label: \"You have 2 pairs of cotton clothes. What options would you prefer to wash the clothes?\",\n        selected: false,\n        program: []\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.userStats();\n  }\n\n  render() {\n    const {\n      selectedOption,\n      q,\n      series\n    } = this.state; // console.log(JSON.stringify(series));\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(MenuItems, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row full-width\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"charts\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            align: \"center\",\n            children: t(\"Sample Visualizations\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"row col-md-4 p-30\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"q-label\",\n              children: t(\"Select Question\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedOption,\n              onChange: this.handleChange,\n              options: q\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bubble, {\n            data: series,\n            selectedOption: selectedOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withTranslation([\"translation\"])(Transaction);","map":{"version":3,"sources":["/var/www/html/proto/prototype/React-UI/src/Components/App/Transaction/Transaction.js"],"names":["React","Component","Bubble","Bar","Select","HomeService","MenuItems","i18n","withTranslation","Transaction","constructor","props","userStats","then","res","stats","data","forEach","value","push","setState","fullstats","console","log","state","filterTree","selectedOption","catch","err","id","treeData","filter","stat","parseInt","question","dataStats","prgms","speed","temp","extra","prgmTotal","speedTotal","tempTotal","extraTotal","i","key","undefined","pgmsArr","Object","entries","Math","round","x","y","speedArr","tempArr","extraArr","series","length","name","handleChange","t","label","selected","program","q","componentDidMount","render"],"mappings":"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","sourcesContent":["/* eslint-disable react/style-prop-object */\n/* eslint-disable jsx-a11y/alt-text */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable */\nimport React, { Component } from \"react\";\nimport Bubble from \"../Stats/Bubble\";\nimport Bar from \"../Stats/Bar\";\nimport Select from \"react-select\";\nimport { HomeService } from \"../../_Services\";\nimport \"./Transaction.css\";\nimport MenuItems from \"../Menu/Menu\";\nimport i18n from \"../../../i18n\";\nimport { withTranslation } from \"react-i18next\";\n\nclass Transaction extends Component {\n  constructor(props) {\n    super(props);\n    const { t } = this.props;\n    this.state = {\n      series: [],\n      fullstats: {},\n      selectedOption: {\n        value: 1,\n\n        label:\n          \"You have 3 pairs of coloured clothes with heavy stains. What options would you prefer to wash the clothes?\",\n        selected: false,\n        program: [],\n      },\n      q: [\n        {\n          value: 1,\n\n          label:\n            \"You have 3 pairs of coloured clothes with heavy stains. What options would you prefer to wash the clothes?\",\n          selected: false,\n          program: [],\n        },\n        {\n          value: 2,\n          label:\n            \"You have 2 pairs of cotton clothes. What options would you prefer to wash the clothes?\",\n          selected: false,\n          program: [],\n        },\n      ],\n    };\n  }\n\n  userStats = () => {\n    HomeService.userStats()\n      .then((res) => {\n        // console.log(res.data.data);\n        var stats = [];\n        res.data.data.forEach(function (value) {\n          //  stats.push([value.programName, value.programStats]);\n          stats.push(value);\n        });\n\n        this.setState({ fullstats: stats }, function () {\n          console.log(this.state.fullstats);\n          this.filterTree(this.state.selectedOption.value);\n        });\n      })\n      .catch((err) => {});\n  };\n\n  filterTree = (id) => {\n    // var id = 1;\n    var treeData = this.state.fullstats.filter((stat) => {\n      return parseInt(id) === parseInt(stat.question);\n    });\n    var data = [];\n    var dataStats = [];\n    console.log(treeData);\n\n    const prgms = {};\n    const speed = {};\n    const temp = {};\n    const extra = {};\n    var prgmTotal = 0;\n    var speedTotal = 0;\n    var tempTotal = 0;\n    var extraTotal = 0;\n\n    for (let i of treeData) {\n      for (const key in i) {\n        if (\n          key != \"pid\" &&\n          key != \"question\" &&\n          key != \"totalStats\" &&\n          i[key] != \"NONE\"\n        ) {\n          console.log(i[key]);\n          if (key == \"programName\") {\n            prgms[i[key]] =\n              prgms[i[key]] == undefined\n                ? i[\"totalStats\"]\n                : (prgms[i[key]] += i[\"totalStats\"]);\n            prgmTotal += parseInt(i[\"totalStats\"]);\n          }\n\n          if (key == \"speed\") {\n            speed[i[key]] =\n              speed[i[key]] == undefined\n                ? i[\"totalStats\"]\n                : (speed[i[key]] += i[\"totalStats\"]);\n            speedTotal += parseInt(i[\"totalStats\"]);\n          }\n\n          if (key == \"temp\") {\n            temp[i[key]] =\n              temp[i[key]] == undefined\n                ? i[\"totalStats\"]\n                : (temp[i[key]] += i[\"totalStats\"]);\n            tempTotal += parseInt(i[\"totalStats\"]);\n          }\n          if (key == \"extraWash\") {\n            extra[i[key]] =\n              extra[i[key]] == undefined\n                ? i[\"totalStats\"]\n                : (extra[i[key]] += i[\"totalStats\"]);\n            extraTotal += parseInt(i[\"totalStats\"]);\n          }\n        }\n      }\n    }\n\n    var pgmsArr = [];\n    for (let [key, value] of Object.entries(prgms)) {\n      value = Math.round((value / prgmTotal) * 100);\n      pgmsArr.push({\n        x: key,\n        y: value,\n      });\n    }\n    var speedArr = [];\n    for (let [key, value] of Object.entries(speed)) {\n      value = Math.round((value / speedTotal) * 100);\n      speedArr.push({\n        x: key,\n        y: value,\n      });\n    }\n    var tempArr = [];\n    for (let [key, value] of Object.entries(temp)) {\n      value = Math.round((value / tempTotal) * 100);\n      tempArr.push({\n        x: key,\n        y: value,\n      });\n    }\n    var extraArr = [];\n    for (let [key, value] of Object.entries(extra)) {\n      value = Math.round((value / extraTotal) * 100);\n      extraArr.push({\n        x: key,\n        y: value,\n      });\n    }\n    // console.log(prgms, speed, temp, extra);\n    const series = [];\n    if (pgmsArr.length > 0) {\n      series.push({\n        name: \"Programme\",\n        data: pgmsArr,\n      });\n    }\n    if (speedArr.length > 0) {\n      series.push({\n        name: \"Speed\",\n        data: speedArr,\n      });\n    }\n    if (speedArr.length > 0) {\n      series.push({\n        name: \"Speed\",\n        data: speedArr,\n      });\n    }\n    if (tempArr.length > 0) {\n      series.push({\n        name: \"Temperature\",\n        data: tempArr,\n      });\n    }\n    if (tempArr.length > 0) {\n      series.push({\n        name: \"Extra Wash\",\n        data: tempArr,\n      });\n    }\n\n    this.setState({ series: series });\n    // for (let i of treeData) {\n    //   // console.log(i);\n\n    //   for (const key in i) {\n    //     if (\n    //       key != \"pid\" &&\n    //       key != \"question\" &&\n    //       key != \"totalStats\" &&\n    //       i[key] != \"NONE\"\n    //     ) {\n    //       var txt = key + \" - \" + i[key];\n\n    //       if (data[txt] == undefined) data[txt] = 0;\n    //       data[txt] = parseInt(data[txt]) + parseInt(i[\"totalStats\"]);\n    //     }\n    //   }\n    //   // console.log(data);\n\n    //   // for (let [index, value] of i) {\n    //   //   console.log(index, value);\n    //   // }\n    // }\n\n    // for (const key in data) {\n    //   // var txt = key + \":\" + data[key];\n\n    //   dataStats.push({\n    //     x: key,\n    //     y: data[key],\n    //   });\n    //   //console.log(`${key}: ${i[key]}`);\n    // }\n    // console.log(dataStats);\n    // this.setState({ data: dataStats });\n    // console.log(data);\n    //  console.log(treeData);\n  };\n\n  componentDidMount() {\n    this.userStats();\n  }\n\n  handleChange = (selectedOption) => {\n    console.log(selectedOption);\n    this.setState({ selectedOption: selectedOption }, function () {\n      this.filterTree(selectedOption.value);\n    });\n    // this.setState({ selectedOption }, () =>\n    //  // console.log(`Option selected:`, this.state.selectedOption)\n    // );\n  };\n\n  render() {\n    const { selectedOption, q, series } = this.state;\n\n    // console.log(JSON.stringify(series));\n    return (\n      <div class=\"container-fluid\">\n        <MenuItems />\n        <div class=\"row full-width\">\n          <div className=\"charts\">\n            <h2 align=\"center\">{t(\"Sample Visualizations\")}</h2>\n            <div class=\"row col-md-4 p-30\">\n              <label class=\"q-label\">{t(\"Select Question\")}</label>\n              <Select\n                value={selectedOption}\n                onChange={this.handleChange}\n                options={q}\n              />\n            </div>\n            <br />\n            <Bubble data={series} selectedOption={selectedOption} />\n\n            {/* <Bar series={series} selectedOption={selectedOption} /> */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation([\"translation\"])(Transaction);\n"]},"metadata":{},"sourceType":"module"}