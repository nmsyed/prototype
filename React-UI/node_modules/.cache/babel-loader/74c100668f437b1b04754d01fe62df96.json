{"ast":null,"code":"import _defineProperty from\"/var/www/html/proto/prototype/React-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"/var/www/html/proto/prototype/React-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/var/www/html/proto/prototype/React-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var _extraReducers;import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import getList from'./missionAPI';var slicename='missions';export var getMissionsList=createAsyncThunk('todo/getMissionList',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_,_ref){var rejectWithValue,results;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:rejectWithValue=_ref.rejectWithValue;_context.prev=1;_context.next=4;return getList();case 4:results=_context.sent;return _context.abrupt(\"return\",results);case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);return _context.abrupt(\"return\",rejectWithValue([],_context.t0));case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}());export var missionSlice=createSlice({name:slicename,initialState:{missionsList:[],loader:false,filterParam:{}},reducers:{setFilterData:function setFilterData(state,action){state.filterParam=action.payload;}},extraReducers:(_extraReducers={},_defineProperty(_extraReducers,getMissionsList.fulfilled,function(state,action){state.loader=false;state.missionsList=action.payload;}),_defineProperty(_extraReducers,getMissionsList.pending,function(state){state.loader=true;}),_defineProperty(_extraReducers,getMissionsList.rejected,function(state,_ref3){var error=_ref3.error;state.loader=false;console.log(error);}),_extraReducers)});var setFilterData=missionSlice.actions.setFilterData;export{setFilterData};export default missionSlice.reducer;","map":{"version":3,"sources":["/var/www/html/proto/prototype/React-UI/src/features/missions/missionSlice.js"],"names":["createAsyncThunk","createSlice","getList","slicename","getMissionsList","_","rejectWithValue","results","missionSlice","name","initialState","missionsList","loader","filterParam","reducers","setFilterData","state","action","payload","extraReducers","fulfilled","pending","rejected","error","console","log","actions","reducer"],"mappings":"yeAAA,OAASA,gBAAT,CAA2BC,WAA3B,KAA8C,kBAA9C,CACA,MAAOC,CAAAA,OAAP,KAAoB,cAApB,CAEA,GAAMC,CAAAA,SAAS,CAAG,UAAlB,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAGJ,gBAAgB,CAC7C,qBAD6C,2FAE7C,iBAAOK,CAAP,mJAAYC,eAAZ,MAAYA,eAAZ,uCAE0BJ,CAAAA,OAAO,EAFjC,QAEUK,OAFV,+CAGWA,OAHX,0FAKWD,eAAe,CAAC,EAAD,aAL1B,sEAF6C,oEAAxC,CAYP,MAAO,IAAME,CAAAA,YAAY,CAAGP,WAAW,CAAC,CACtCQ,IAAI,CAAEN,SADgC,CAEtCO,YAAY,CAAE,CACZC,YAAY,CAAE,EADF,CAEZC,MAAM,CAAE,KAFI,CAGZC,WAAW,CAAE,EAHD,CAFwB,CAOtCC,QAAQ,CAAE,CACRC,aAAa,CAAE,uBAACC,KAAD,CAAQC,MAAR,CAAmB,CAChCD,KAAK,CAACH,WAAN,CAAoBI,MAAM,CAACC,OAA3B,CACD,CAHO,CAP4B,CAYtCC,aAAa,mDACVf,eAAe,CAACgB,SADN,CACkB,SAACJ,KAAD,CAAQC,MAAR,CAAmB,CAC9CD,KAAK,CAACJ,MAAN,CAAe,KAAf,CACAI,KAAK,CAACL,YAAN,CAAqBM,MAAM,CAACC,OAA5B,CACD,CAJU,iCAKVd,eAAe,CAACiB,OALN,CAKgB,SAACL,KAAD,CAAW,CACpCA,KAAK,CAACJ,MAAN,CAAe,IAAf,CACD,CAPU,iCAQVR,eAAe,CAACkB,QARN,CAQiB,SAACN,KAAD,OAAsB,IAAZO,CAAAA,KAAY,OAAZA,KAAY,CAChDP,KAAK,CAACJ,MAAN,CAAe,KAAf,CACAY,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACD,CAXU,iBAZyB,CAAD,CAAhC,C,GA2BQR,CAAAA,a,CAAkBP,YAAY,CAACkB,O,CAA/BX,a,uBAEf,cAAeP,CAAAA,YAAY,CAACmB,OAA5B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport getList from './missionAPI';\n\nconst slicename = 'missions';\n\nexport const getMissionsList = createAsyncThunk(\n  'todo/getMissionList',\n  async (_, { rejectWithValue }) => {\n    try {\n      const results = await getList();\n      return results;\n    } catch (err) {\n      return rejectWithValue([], err);\n    }\n  },\n);\n\nexport const missionSlice = createSlice({\n  name: slicename,\n  initialState: {\n    missionsList: [],\n    loader: false,\n    filterParam: {},\n  },\n  reducers: {\n    setFilterData: (state, action) => {\n      state.filterParam = action.payload;\n    },\n  },\n  extraReducers: {\n    [getMissionsList.fulfilled]: (state, action) => {\n      state.loader = false;\n      state.missionsList = action.payload;\n    },\n    [getMissionsList.pending]: (state) => {\n      state.loader = true;\n    },\n    [getMissionsList.rejected]: (state, { error }) => {\n      state.loader = false;\n      console.log(error);\n    },\n  },\n});\n\nexport const { setFilterData } = missionSlice.actions;\n\nexport default missionSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}