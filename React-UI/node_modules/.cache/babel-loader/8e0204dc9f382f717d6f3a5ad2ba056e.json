{"ast":null,"code":"import i18n from \"i18next\";\nimport Backend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\"; // import translationEN from '../public/locales/en/translation.json';\n// import translationDE from '../public/locales/es/translation.json';\n// const resources = {\n//   en: {\n//     translation: translationEN\n//   },\n//   de: {\n//     translation: translationDE\n//   }\n// };\n\ni18n // load translation using http -> see /public/locales\n// learn more: https://github.com/i18next/i18next-http-backend\n.use(Backend) // detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector) // pass the i18n instance to react-i18next.\n.use(initReactI18next) // init i18next\n// for all options read: https://www.i18next.com/overview/configuration-options\n.init({\n  debug: true,\n  // resources,\n  fallbackLng: 'en',\n  interpolation: {\n    escapeValue: false // not needed for react as it escapes by default\n\n  },\n  react: {\n    useSuspense: false\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["/var/www/html/proto/prototype/React-UI/src/i18n.js"],"names":["i18n","Backend","LanguageDetector","initReactI18next","use","init","debug","fallbackLng","interpolation","escapeValue","react","useSuspense"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,SAASC,gBAAT,QAAiC,eAAjC,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAH,IAAI,CACF;AACA;AAFE,CAGDI,GAHH,CAGOH,OAHP,EAIE;AACA;AALF,CAMGG,GANH,CAMOF,gBANP,EAOE;AAPF,CAQGE,GARH,CAQOD,gBARP,EASE;AACA;AAVF,CAWGE,IAXH,CAWQ;AACJC,EAAAA,KAAK,EAAE,IADH;AAEJ;AACAC,EAAAA,WAAW,EAAE,IAHT;AAIJC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA,CACM;;AADN,GAJX;AAQJC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE;AADR;AARH,CAXR;AAwBA,eAAeX,IAAf","sourcesContent":["import i18n from \"i18next\";\nimport Backend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\n// import translationEN from '../public/locales/en/translation.json';\n// import translationDE from '../public/locales/es/translation.json';\n\n// const resources = {\n//   en: {\n//     translation: translationEN\n//   },\n//   de: {\n//     translation: translationDE\n//   }\n// };\n\ni18n\n  // load translation using http -> see /public/locales\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    debug: true,\n    // resources,\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false // not needed for react as it escapes by default\n    },\n\n    react: {\n      useSuspense: false\n    }\n  });\n\nexport default i18n;\n"]},"metadata":{},"sourceType":"module"}