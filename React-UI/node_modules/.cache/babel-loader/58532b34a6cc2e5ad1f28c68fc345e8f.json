{"ast":null,"code":"var _jsxFileName = \"/var/www/html/proto/prototype/React-UI/src/Components/App/Stats/Bar.js\";\nimport React from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { withTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Bar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      series: [{\n        name: \"Transaction Time\",\n        data: []\n      }],\n      options: {\n        annotations: {\n          points: [{\n            x: \"Bananas\",\n            seriesIndex: 0,\n            label: {\n              borderColor: \"#775DD0\",\n              offsetY: 0,\n              style: {\n                color: \"#fff\",\n                background: \"#775DD0\"\n              },\n              text: \"\"\n            }\n          }]\n        },\n        chart: {\n          height: 350,\n          type: \"bar\"\n        },\n        plotOptions: {\n          bar: {\n            borderRadius: 10,\n            columnWidth: \"10%\"\n          }\n        },\n        dataLabels: {\n          enabled: false,\n          style: {\n            colors: [\"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\"]\n          }\n        },\n        stroke: {\n          width: 2\n        },\n        grid: {\n          row: {\n            colors: [\"#000000\", \"#fff\", \"#fff\", \"#fff\", \"#fff\"]\n          }\n        },\n        xaxis: {\n          style: {\n            color: \"#FFFFFF\",\n            fontSize: \"14px\",\n            show: true\n          },\n          labels: {\n            rotate: -45\n          },\n          color: \"red\",\n          categories: [] // tickPlacement: \"on\",\n\n        },\n        yaxis: {\n          style: {\n            color: \"#FFFFFF\",\n            fontSize: \"14px\",\n            show: true\n          },\n          title: {\n            text: \"Tranasction Time\",\n            color: \"#FFFFFF\"\n          }\n        },\n        fill: {\n          // type: \"gradient\",\n          gradient: {\n            shade: \"light\",\n            type: \"horizontal\",\n            shadeIntensity: 0.25,\n            gradientToColors: undefined,\n            inverseColors: true,\n            opacityFrom: 0.85,\n            opacityTo: 0.85 // stops: [50, 0, 100],\n\n          }\n        }\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (JSON.stringify(prevProps.seriesData) !== JSON.stringify(this.props.seriesData)) {\n      // console.log(prevProps, currentProps);\n      this.setState({\n        series: [{\n          data: this.props.seriesData\n        }]\n      });\n    }\n\n    if (JSON.stringify(prevProps.series) !== JSON.stringify(this.props.series)) {\n      // console.log(prevProps, currentProps);\n      this.setState({\n        options: {\n          xaxis: {\n            categories: this.props.series\n          }\n        }\n      });\n    }\n  }\n\n  componentDidMount() {\n    // this.setState({ series: this.props.series });\n    this.setState({\n      series: [{\n        data: this.props.seriesData\n      }]\n    });\n    this.setState({\n      options: {\n        xaxis: {\n          categories: this.props.series\n        }\n      }\n    });\n  }\n\n  render() {\n    var {\n      options,\n      series\n    } = this.state;\n    var {\n      t\n    } = this.props;\n    series[0].name = t(\"Transaction Time\");\n    console.log(options);\n    console.log(series);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n        options: options,\n        series: series,\n        type: \"bar\",\n        height: 350,\n        width: 1000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withTranslation([\"translation\"])(Bar);","map":{"version":3,"sources":["/var/www/html/proto/prototype/React-UI/src/Components/App/Stats/Bar.js"],"names":["React","ReactApexChart","withTranslation","Bar","Component","constructor","props","state","series","name","data","options","annotations","points","x","seriesIndex","label","borderColor","offsetY","style","color","background","text","chart","height","type","plotOptions","bar","borderRadius","columnWidth","dataLabels","enabled","colors","stroke","width","grid","row","xaxis","fontSize","show","labels","rotate","categories","yaxis","title","fill","gradient","shade","shadeIntensity","gradientToColors","undefined","inverseColors","opacityFrom","opacityTo","componentDidUpdate","prevProps","JSON","stringify","seriesData","setState","componentDidMount","render","t","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { withTranslation } from \"react-i18next\";\n\nclass Bar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      series: [\n        {\n          name: \"Transaction Time\",\n          data: [],\n        },\n      ],\n      options: {\n        annotations: {\n          points: [\n            {\n              x: \"Bananas\",\n              seriesIndex: 0,\n              label: {\n                borderColor: \"#775DD0\",\n                offsetY: 0,\n                style: {\n                  color: \"#fff\",\n                  background: \"#775DD0\",\n                },\n                text: \"\",\n              },\n            },\n          ],\n        },\n        chart: {\n          height: 350,\n          type: \"bar\",\n        },\n        plotOptions: {\n          bar: {\n            borderRadius: 10,\n            columnWidth: \"10%\",\n          },\n        },\n        dataLabels: {\n          enabled: false,\n          style: {\n            colors: [\"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\"],\n          },\n        },\n        stroke: {\n          width: 2,\n        },\n\n        grid: {\n          row: {\n            colors: [\"#000000\", \"#fff\", \"#fff\", \"#fff\", \"#fff\"],\n          },\n        },\n        xaxis: {\n          style: {\n            color: \"#FFFFFF\",\n            fontSize: \"14px\",\n            show: true,\n          },\n          labels: {\n            rotate: -45,\n          },\n          color: \"red\",\n          categories: [],\n          // tickPlacement: \"on\",\n        },\n        yaxis: {\n          style: {\n            color: \"#FFFFFF\",\n            fontSize: \"14px\",\n            show: true,\n          },\n          title: {\n            text: \"Tranasction Time\",\n            color: \"#FFFFFF\",\n          },\n        },\n        fill: {\n          // type: \"gradient\",\n          gradient: {\n            shade: \"light\",\n            type: \"horizontal\",\n            shadeIntensity: 0.25,\n            gradientToColors: undefined,\n            inverseColors: true,\n            opacityFrom: 0.85,\n            opacityTo: 0.85,\n            // stops: [50, 0, 100],\n          },\n        },\n      },\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      JSON.stringify(prevProps.seriesData) !==\n      JSON.stringify(this.props.seriesData)\n    ) {\n      // console.log(prevProps, currentProps);\n      this.setState({ series: [{ data: this.props.seriesData }] });\n    }\n\n    if (\n      JSON.stringify(prevProps.series) !== JSON.stringify(this.props.series)\n    ) {\n      // console.log(prevProps, currentProps);\n      this.setState({\n        options: {\n          xaxis: {\n            categories: this.props.series,\n          },\n        },\n      });\n    }\n  }\n\n  componentDidMount() {\n    // this.setState({ series: this.props.series });\n\n    this.setState({ series: [{ data: this.props.seriesData }] });\n    this.setState({\n      options: {\n        xaxis: {\n          categories: this.props.series,\n        },\n      },\n    });\n  }\n\n  render() {\n    var { options, series } = this.state;\n\n    var { t } = this.props;\n\n    series[0].name = t(\"Transaction Time\");\n\n    console.log(options);\n    console.log(series);\n    return (\n      <div id=\"chart\">\n        <ReactApexChart\n          options={options}\n          series={series}\n          type=\"bar\"\n          height={350}\n          width={1000}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withTranslation([\"translation\"])(Bar);\n"]},"metadata":{},"sourceType":"module"}